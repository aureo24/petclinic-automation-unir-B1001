import type { FixtureResult, StepResult, TestResult } from "../../model.js";
import type { FixtureType, FixtureWrapper, TestScope } from "./types.js";
export declare class LifecycleState {
    scopes: Map<string, TestScope>;
    testResults: Map<string, TestResult>;
    stepResults: Map<string, StepResult>;
    fixturesResults: Map<string, FixtureWrapper>;
    getScope: (uuid: string) => TestScope | undefined;
    getWrappedFixtureResult: (uuid: string) => FixtureWrapper | undefined;
    getFixtureResult: (uuid: string) => FixtureResult | undefined;
    getTestResult: (uuid: string) => TestResult | undefined;
    getStepResult: (uuid: string) => StepResult | undefined;
    getExecutionItem: (uuid: string) => FixtureResult | TestResult | StepResult | undefined;
    setTestResult: (uuid: string, result: TestResult) => void;
    deleteTestResult: (uuid: string) => void;
    setStepResult: (uuid: string, result: StepResult) => void;
    deleteStepResult: (uuid: string) => void;
    setFixtureResult: (uuid: string, type: FixtureType, result: FixtureResult) => FixtureWrapper;
    deleteFixtureResult: (uuid: string) => void;
    setScope: (uuid: string, data?: Partial<TestScope>) => TestScope;
    deleteScope: (uuid: string) => void;
}
