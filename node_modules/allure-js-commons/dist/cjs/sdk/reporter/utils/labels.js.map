{"version":3,"file":"labels.js","names":["_nodeOs","require","_nodeProcess","_nodeWorker_threads","_model","ENV_LABEL_PREFIX","getEnvironmentLabels","result","envKey","env","startsWith","name","substring","length","trim","push","value","process","exports","hostValue","getHostLabel","_env$ALLURE_HOST_NAME","ALLURE_HOST_NAME","hostname","LabelName","HOST","getThreadLabel","userProvidedThreadId","_ref","_env$ALLURE_THREAD_NA","THREAD","ALLURE_THREAD_NAME","concat","pid","toString","isMainThread","threadId"],"sources":["../../../../../src/sdk/reporter/utils/labels.ts"],"sourcesContent":["import { hostname } from \"node:os\";\nimport { env, pid } from \"node:process\";\nimport { isMainThread, threadId } from \"node:worker_threads\";\nimport type { Label } from \"../../../model.js\";\nimport { LabelName } from \"../../../model.js\";\n\nconst ENV_LABEL_PREFIX = \"ALLURE_LABEL_\";\n\nexport const getEnvironmentLabels = (): Label[] => {\n  const result: Label[] = [];\n  for (const envKey in env) {\n    if (envKey.startsWith(ENV_LABEL_PREFIX)) {\n      const name = envKey.substring(ENV_LABEL_PREFIX.length).trim();\n      if (name !== \"\") {\n        result.push({ name, value: process.env[envKey]! });\n      }\n    }\n  }\n  return result;\n};\n\nlet hostValue: string;\n\nexport const getHostLabel = (): Label => {\n  if (!hostValue) {\n    hostValue = env.ALLURE_HOST_NAME ?? hostname();\n  }\n\n  return {\n    name: LabelName.HOST,\n    value: hostValue,\n  };\n};\n\nexport const getThreadLabel = (userProvidedThreadId?: string): Label => {\n  return {\n    name: LabelName.THREAD,\n    value:\n      env.ALLURE_THREAD_NAME ??\n      userProvidedThreadId ??\n      `pid-${pid.toString()}-worker-${isMainThread ? \"main\" : threadId}`,\n  };\n};\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,mBAAA,GAAAF,OAAA;AAEA,IAAAG,MAAA,GAAAH,OAAA;AAEA,IAAMI,gBAAgB,GAAG,eAAe;AAEjC,IAAMC,oBAAoB,GAAGA,CAAA,KAAe;EACjD,IAAMC,MAAe,GAAG,EAAE;EAC1B,KAAK,IAAMC,MAAM,IAAIC,gBAAG,EAAE;IACxB,IAAID,MAAM,CAACE,UAAU,CAACL,gBAAgB,CAAC,EAAE;MACvC,IAAMM,IAAI,GAAGH,MAAM,CAACI,SAAS,CAACP,gBAAgB,CAACQ,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC;MAC7D,IAAIH,IAAI,KAAK,EAAE,EAAE;QACfJ,MAAM,CAACQ,IAAI,CAAC;UAAEJ,IAAI;UAAEK,KAAK,EAAEC,OAAO,CAACR,GAAG,CAACD,MAAM;QAAG,CAAC,CAAC;MACpD;IACF;EACF;EACA,OAAOD,MAAM;AACf,CAAC;AAACW,OAAA,CAAAZ,oBAAA,GAAAA,oBAAA;AAEF,IAAIa,SAAiB;AAEd,IAAMC,YAAY,GAAGA,CAAA,KAAa;EACvC,IAAI,CAACD,SAAS,EAAE;IAAA,IAAAE,qBAAA;IACdF,SAAS,IAAAE,qBAAA,GAAGZ,gBAAG,CAACa,gBAAgB,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,IAAAE,gBAAQ,EAAC,CAAC;EAChD;EAEA,OAAO;IACLZ,IAAI,EAAEa,gBAAS,CAACC,IAAI;IACpBT,KAAK,EAAEG;EACT,CAAC;AACH,CAAC;AAACD,OAAA,CAAAE,YAAA,GAAAA,YAAA;AAEK,IAAMM,cAAc,GAAIC,oBAA6B,IAAY;EAAA,IAAAC,IAAA,EAAAC,qBAAA;EACtE,OAAO;IACLlB,IAAI,EAAEa,gBAAS,CAACM,MAAM;IACtBd,KAAK,GAAAY,IAAA,IAAAC,qBAAA,GACHpB,gBAAG,CAACsB,kBAAkB,cAAAF,qBAAA,cAAAA,qBAAA,GACtBF,oBAAoB,cAAAC,IAAA,cAAAA,IAAA,UAAAI,MAAA,CACbC,gBAAG,CAACC,QAAQ,CAAC,CAAC,cAAAF,MAAA,CAAWG,gCAAY,GAAG,MAAM,GAAGC,4BAAQ;EACpE,CAAC;AACH,CAAC;AAAClB,OAAA,CAAAQ,cAAA,GAAAA,cAAA","ignoreList":[]}