{"version":3,"file":"MessageReader.js","names":["_facade","require","_utils","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperty","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","parseJsonResult","data","JSON","parse","Buffer","from","toString","MessageReader","constructor","_this","tests","groups","attachments","jsonMessage","path","type","results","push","envInfo","parseProperties","categories","handleCustomMessage","step","attachment","stringify","stringifyProperties","key","keys","content","contentType","encoding","tr","concat","uuid","trc","exports"],"sources":["../../../../../src/sdk/reporter/writer/MessageReader.ts"],"sourcesContent":["import { attachment, step } from \"../../../facade.js\";\nimport type { TestResult, TestResultContainer } from \"../../../model.js\";\nimport type { AllureResults, EnvironmentInfo } from \"../../types.js\";\nimport { parseProperties, stringifyProperties } from \"../utils.js\";\n\nconst parseJsonResult = <T>(data: string) => {\n  return JSON.parse(Buffer.from(data, \"base64\").toString(\"utf-8\")) as T;\n};\n\nexport class MessageReader {\n  readonly results: AllureResults = {\n    tests: [],\n    groups: [],\n    attachments: {},\n  };\n\n  handleMessage = (jsonMessage: string) => {\n    const { path, type = \"undefined\", data }: { path: string; type?: string; data: string } = JSON.parse(jsonMessage);\n\n    switch (type) {\n      case \"container\":\n        this.results.groups.push(parseJsonResult<TestResultContainer>(data));\n        return;\n      case \"result\":\n        this.results.tests.push(parseJsonResult<TestResult>(data));\n        return;\n      case \"attachment\":\n        this.results.attachments[path] = data;\n        return;\n      case \"misc\":\n        switch (path) {\n          case \"environment.properties\":\n            this.results.envInfo = parseProperties(Buffer.from(data, \"base64\").toString()) as EnvironmentInfo;\n            break;\n          case \"categories.json\":\n            this.results.categories = parseJsonResult(data);\n            break;\n          default:\n            break;\n        }\n        return;\n      default:\n        this.handleCustomMessage(type, data, path);\n        return;\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  handleCustomMessage = (type: string, data: any, path: string) => {};\n\n  attachResults = async () => {\n    await step(\"allure-results\", async () => {\n      if (this.results.categories) {\n        await attachment(\"categories.json\", JSON.stringify(this.results.categories), \"application/json\");\n      }\n      if (this.results.envInfo) {\n        await attachment(\"environment.properties\", stringifyProperties(this.results.envInfo), \"text/plain\");\n      }\n      if (this.results.attachments) {\n        for (const key of Object.keys(this.results.attachments)) {\n          const content = this.results.attachments[key];\n          await attachment(key, content, {\n            contentType: \"text/plain\",\n            encoding: \"base64\",\n          });\n        }\n      }\n      if (this.results.tests) {\n        for (const tr of this.results.tests) {\n          await attachment(`${tr.uuid}-result.json`, JSON.stringify(tr, null, 2), {\n            contentType: \"application/json\",\n            encoding: \"utf-8\",\n          });\n        }\n      }\n      if (this.results.groups) {\n        for (const trc of this.results.groups) {\n          await attachment(`${trc.uuid}-container.json`, JSON.stringify(trc, null, 2), {\n            contentType: \"application/json\",\n            encoding: \"utf-8\",\n          });\n        }\n      }\n    });\n  };\n}\n"],"mappings":"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","ignoreList":[]}